[[{"l":"Alice Doc","p":["À propos de moi:"]},{"l":"Les docs","p":["Alina","Apache2","Choose my os","Configuration Tor","Configuration web","Deno","Dev","DNS rebinding","Encapsulation","Ethernet V2","FTP","Grafana","Modele Osi","Monitoring","Node exporter","Notions","Osint","Outils","Ping","Projets","Réseau","Secu","Simple","Système","TCP IP","Traceroute","Whois"]},{"l":"Alice","p":["Github"]}],[{"l":"HoneyPot","p":["Card game"]}],[{"l":"Card Game","p":["Avoir quelques notions en cybersécurité web et avoir envie de ruiner quelques espoirs ? quelle beeelllleeee vie. Perso, j'aime recevoir un message de mon bot: Someone has been trolled troll name | IP: X.X.X.X Mais comment mettre le système en place ? c'est assez simple."]},{"l":"1. Formulaire caché","p":["C'est probablement la protection la plus connue, mais elle marche assez bien ! Alors en quoi cela consiste ? tout simplement cacher un champ dans un formulaire. Alors pourquoi ? c'est assez simple. Un bot simple qui tente de remplir les formulaires pour tester la sécurité remplit tous les champs du formulaire avec des données crédibles. Mais ils ne sont pas capables de détecter si un champ est caché ou non ! Il ne vous reste plus qu'a ne pas traité la demande de formulaire dont ce fameux champ est rempli. Rares sont les utilisateurs qui remplissent un champ qui n'existe pas xD"]},{"i":"comment-faire-","l":"Comment faire ?","p":["Tiens ?!! c'est étonnant son chat s'appelle \"ibjunjob\""]},{"l":"2. Extraction .git","p":["Wait tu utilises pas git pour gérer ton code source ! Érudie !! Enfin bref, si tu es censé tu utilise git pour gérer ton code source. Et devine quoi ? ce n'est pas une configuration 403 dans /.git/ qui va m'arrêter Bha quoi ? vous n'êtes pas au courant pour la reconstitution de git ? attendez je vous montre. Tu cliques ici et avec une simple commande dans ton terminal MAGIE ! Mais bon j'espère que cela ne marche pas sur ton site. Et si on le faisait fonctionner sur ton site ? Bah oui réfléchit 2 min. Git stocke tout, donc pourquoi on d'upload pas un fichier .git d'un autre projet à la place ? un script débile, un faux site ou un rick roll tant qu'à y être. Le hacker, il tente, sa marche, il se dit \"jackpot\", il ouvre groooooss trollllll"]},{"i":"comment-faire--1","l":"Comment faire ?","p":["creer un projet git","développe ton script troll","commit","upload le dossier sur ton site","attand qu'un hacker tombe dans le panneau"]}],[{"l":"Network","p":["DNS rebinding","FTP Auth"]}],[{"l":"DNS Rebinding","p":["Autoriser des requêtes arbitraires d'origine croisée est connu pour être extrêmement dangereux. Par conséquent, la plupart des navigateurs modernes bloquent ces requêtes. Cependant, la reliaison DNS offre un moyen de contourner cette restriction. Cette section présente l'importance de la politique de même origine et le fonctionnement de la technique de reliure DNS."]},{"i":"alors-comment-sa-marche-","l":"Alors comment sa marche ?","p":["En fait c'est relativement con. Il faut faire croire que l'ip du serveur web ou la victime souhaite aller se trouve dans son réseau local. Pour cela il faut utiliser un service dans avec un TTL très bas afin que la victime face souvent la requête dans pour l'hostname.","l'utilisateur va sur le vrai site","nouvelle requête dns => response sur le réseau local","script js qui fait des requêtes","on envoie enfin le résultat sur un serveur compromis","Rien de plus simple!"]},{"l":"Outils","p":["Dans cette situation et dans une raison de flème de développer un serveur DNS a la main, je vous recommande cet outils. Après bien sur si vous voulez faire comme moi, faut dev le serveur à la mano :p"]},{"i":"exemple","l":"Exemple:","p":["Imaginons un script qui n'est accessible que depuis l'ip 127.0.0.1 par rapport au serveur web... Oui c'est déjà mal barré MAIS tout est encore possible. En effet, imaginons que le site permette des iframes et nous choisissons nous-mêmes les URL, oui Bah la c'est fini pour le site.... Pourquoi ? simple, car on sait faire du dns rebinding !","On a besoin de 2 Ip, la 1er c'est 127.0.0.1 et la 2e n’importe quelle ip qui marche, pour l'exemple 8.8.8.8. Nous allons utiliser cet outils pour générer une URL. Nous obtenons: http://7f000001.08080808.rbndr.us Rajoutons quelques dingueries de ports et le path /admin: http://7f000001.08080808.rbndr.us:66666/admin","Il ne reste plus qu'à spammer comme des gros porcs le bouton \"get\" et attendre que l'attaque se passe."]}],[{"l":"FTP","p":["Comment pirater une authentification FTP pour laquelle on a les trames ? En fait c'est tout con. Premièrement il vous faut le logiciel Wireshark, puis:","Dans les paramètres de filtrage: \"ftp\"","Chercher la ligne: \"Response : 331 Enter password\"","Et puis normalement juste après on a : \"Request : PASS $\""]}],[{"l":"Osint","p":["Le renseignement en sources ouvertes n’a rien de strictement cyber : le terme désigne tout simplement l’exploitation de sources d’information accessibles à tout un chacun (journaux, sites web, conférences…) à des fins de renseignement. Cependant, l’essentiel de ces informations existe désormais sous une forme numérique, et les systèmes informatiques permettent leur découverte et leur traitement de manière automatique et massive. Dans le domaine de la cybersécurité, l’OSINT permet notamment aux attaquants de mener des reconnaissances efficaces contre leurs victimes (individus comme entreprises). Les informations ainsi collectées contribuent notamment à rendre plus crédible l’escroquerie. Le renseignement en sources ouvertes est aussi un outil important du monde du renseignement économique. \uD83D\uDCBD","On va tenter de faire plus simple. Pour schématiser, c'est l'exploitation de toutes les ressources qui vous corresponde qui est exploitée. Récupérer votre liste d'amis, votre email ou encore certains donnés personnels qui sont publiques. Vos données peuvent ensuite passer une série de tests comme leur utilisation:","Votre email est-il lié un à CV en ligne ? \uD83E\uDD73","Votre email est-il présent sur un site pornographique \uD83D\uDE05","Quels sont les organismes liés à votre numéro de téléphone ?"]}],[{"i":"#","p":["Quelques codes de script simple à prendre en main"]},{"l":"Deno","p":["Web proxy"]}],[{"i":"lets-build-little-web-proxy","l":"Let's build little web proxy"},{"l":"A savoir","p":["response.body accepte du Uint8Array et non du arrayBuffer, il faut donc pas oublier de le convertir"]},{"l":"Final code"}],[{"l":"Deno","p":["Deno is a simple, modern and secure runtime for JavaScript and TypeScript that uses V8 and is built in Rust. Start with DENO Brainfuck code"]}],[{"i":"cest-bagad","l":"C'est bagad"}],[{"l":"Monitoring","p":["Mise en place d'outils de monitoring de votre système","Grafana","Node expoter"]}],[{"l":"Grafana","p":["Mise a jour du système + ajout de package:","Ajout dans les repository:","Puis on installe","Fuck debian based :p","Add this","Then install:","Open Grafana DOC"]}],[{"l":"Node exporter","p":["Node exporter c'est un logiciel en go qui est utilisé comme analyse du système. il doit être fusionné avec Prometheus et Grafana bien sur afin de sortir des analyses complètes sur votre système. Son installation est assez simple et rapide à mettre en place"]},{"l":"Install","p":["Premièrement il faut télécharger le package:","L'argüer et de déplacer dans le répertoire des fichiers ben","Et pour finir ajouter un utilisateur qui lui est dédié"]},{"l":"systemd","p":["Oui il faut créer le système à la mano. Éditez le fichier suivant:","et placez-le contente suivant à l'intérieur:","il faut maintenant redémarrer le daemon","eeeetttttt ttoooookkkkkk c'est bon ! http://server-IP:9100/metrics"]}],[{"l":"Réseau","p":["Explication de notions et d' outils"]}],[{"l":"Réseau","p":["Notions de base","Encapsulation","Modele Osi","TCP IP","Ethernet V2"]}],[{"l":"Encapsulation","p":["Au fur et à mesure que les données sont transmises à chaque couche du modèle, plus d'informations contenant des détails spécifiques à la couche en question sont ajoutées au début de la transmission. À titre d'exemple, l'en-tête ajouté par la couche réseau inclurait des éléments tels que les adresses IP source et de destination, et l'en-tête ajouté par la couche de transport inclurait (entre autres) des informations spécifiques au protocole utilisé. La couche liaison de données ajoute également un élément à la fin de la transmission, qui est utilisé pour vérifier que les données n'ont pas été corrompues lors de la transmission; cela a également l'avantage supplémentaire d'une sécurité accrue, car les données ne peuvent pas être interceptées et falsifiées sans casser la remorque. L'ensemble de ce processus est appelé encapsulation; le processus par lequel les données peuvent être envoyées d'un ordinateur à un autre."]}],[{"l":"Ethernet V2","p":["Une trame Ethernet doit avoir une taille d’au moins 64 octets par défaut pour que la détection de collision fonctionne, et peut avoir une taille maximale de 1 518 octets. Le paquet commence toujours par un préambule, qui contrôle la synchronisation entre l’émetteur et le récepteur, et un Start Frame Delimiter (SFD), qui définit la trame. Les deux informations sont une séquence de bits au format 10101010.... La trame réelle contient des informations sur les adresses de destination et de source (format MAC) et des informations de contrôle, suivies par l’ensemble des données à transmettre. Une Frame Check Sequence (FCS) ferme la trame entière (à l’exception du préambule et du SFD) comme somme de contrôle.","Ethernet II utilise la structure de trame classique, qui comprend le champ type, qui définit différents protocoles de la couche de commutation. Dans le modèle OSI, la couche réseau est importante pour la commutation des connexions et la fourniture des adresses réseau. Dans les formats de trame ultérieurs, le champ de type a été remplacé par une spécification de longueur."]}],[{"l":"Modèle OSI","p":["OSI (Open Systems Interconnection) Le modèle est un modèle standardisé que nous utilisons pour démontrer la théorie derrière les réseaux informatiques. En pratique, c'est en fait le modèle TCP / IP le plus compact sur lequel repose le réseau réel; cependant, le modèle OSI, à bien des égards, est plus facile à comprendre. Le modèle OSI se compose de sept couches:"]},{"i":"couche-1---physique","l":"Couche 1 - Physique:","p":["La couche physique est directement liée au matériel de l'ordinateur. C'est là que les impulsions électriques qui composent le transfert de données sur un réseau sont envoyées et reçues. C'est le travail de la couche physique de convertir les données binaires de la transmission en signaux et de les transmettre à travers le réseau, ainsi que de recevoir les signaux entrants et de les reconvertir en données binaires."]},{"i":"couche-2---liaison-de-données","l":"Couche 2 - Liaison de données:","p":["La couche liaison de données se concentre sur l'adressage physique de la transmission. Il reçoit un paquet de la couche réseau (qui comprend l'adresse IP de l'ordinateur distant) et ajoute l'adresse physique (MAC) du point d'extrémité de réception. À l'intérieur de chaque ordinateur compatible réseau se trouve une carte d'interface réseau (NIC) qui est livrée avec une adresse MAC (Media Access Control) unique pour l'identifier. Les adresses MAC sont définies par le fabricant et littéralement gravées dans la carte; ils ne peuvent pas être modifiés - bien qu'ils puissent être usurpés. Lorsque les informations sont envoyées sur un réseau, c'est en fait l'adresse physique qui est utilisée pour identifier exactement où envoyer les informations. En outre, il incombe également à la couche liaison de données de présenter les données dans un format adapté à la transmission. La couche liaison de données remplit également une fonction importante lorsqu'elle reçoit des données, car elle vérifie les informations reçues pour s'assurer qu'elles n'ont pas été corrompues lors de la transmission, ce qui pourrait bien se produire lorsque les données sont transmises par la couche 1: la couche physique."]},{"i":"couche-3---réseau","l":"Couche 3 - Réseau:","p":["La couche réseau est chargée de localiser la destination de votre demande. Par exemple, Internet est un immense réseau; lorsque vous souhaitez demander des informations à partir d'une page Web, c'est la couche réseau qui prend l'adresse IP de la page et détermine le meilleur itinéraire à emprunter. À ce stade, nous travaillons avec ce que l'on appelle l'adressage logique (c'est-à-dire les adresses IP) qui sont toujours contrôlées par logiciel. Les adresses logiques sont utilisées pour donner de l'ordre aux réseaux, les catégoriser et nous permettre de les trier correctement. Actuellement, la forme la plus courante d'adressage logique est le format IPV4, que vous connaissez probablement déjà (c'est-à-dire que 192.168.0.1 ou 192.168.0.254 sont des adresses courante pour un routeur domestique)."]},{"i":"couche-4---transport","l":"Couche 4 - Transport:","p":["La couche de transport est une couche très intéressante qui remplit de nombreuses fonctions importantes. Son premier objectif est de choisir le protocole sur lequel les données doivent être transmises. Les deux protocoles les plus courants dans la couche transport sont TCP (Transmission Control Protocol) et UDP (User Datagram Protocol); avec TCP, la transmission est basée sur la connexion, ce qui signifie qu'une connexion entre les ordinateurs est établie et maintenue pendant la durée de la demande. Cela permet une transmission fiable, car la connexion peut être utilisée pour garantir que les paquets arrivent tous au bon endroit. Une connexion TCP permet aux deux ordinateurs de rester en communication constante pour s'assurer que les données sont envoyées à une vitesse acceptable et que toutes les données perdues sont renvoyées. Avec UDP, le contraire est vrai; les paquets de données sont essentiellement jetés sur l'ordinateur récepteur - s'il ne peut pas suivre, c'est son problème (c'est pourquoi une transmission vidéo sur quelque chose comme Skype peut être pixelisée si la connexion est mauvaise). Cela signifie que TCP serait généralement choisi pour les situations où la précision est préférée à la vitesse (par exemple, le transfert de fichiers ou le chargement d'une page Web), et UDP serait utilisé dans les situations où la vitesse est plus importante (par exemple, le streaming vidéo). Avec un protocole sélectionné, la couche de transport divise ensuite la transmission en morceaux de la taille d'une bouchée (sur TCP, ils sont appelés segments, sur UDP, ils sont appelés datagrammes), ce qui facilite la transmission du message avec succès."]},{"i":"couche-5---session","l":"Couche 5 - Session:","p":["Lorsque la couche de session reçoit les données correctement formatées de la couche de présentation, elle cherche à voir si elle peut établir une connexion avec l'autre ordinateur sur le réseau. Si ce n'est pas le cas, il renvoie une erreur et le processus ne va pas plus loin. Si une session peut être établie, il incombe à la couche session de la maintenir, ainsi que de coopérer avec la couche session de l'ordinateur distant afin de synchroniser les communications. La couche session est particulièrement importante car la session qu'elle crée est propre à la communication en question. C'est ce qui vous permet de faire plusieurs requêtes à différents points de terminaison simultanément sans que toutes les données ne se mélangent (pensez à ouvrir deux onglets dans un navigateur Web en même temps)! Lorsque la couche de session a correctement enregistré une connexion entre l'hôte et l'ordinateur distant, les données sont transmises à la couche 4: la couche de transport."]},{"i":"couche-6---présentation","l":"Couche 6 - Présentation:","p":["La couche présentation reçoit des données de la couche application. Ces données ont tendance à être dans un format que l'application comprend, mais ce n'est pas nécessairement dans un format normalisé qui pourrait être compris par la couche application dans l'ordinateur de réception. La couche de présentation traduit les données dans un format standardisé, ainsi que la gestion de tout cryptage, compression ou autres transformations des données. Une fois cette opération terminée, les données sont transmises à la couche session."]},{"i":"couche-7---application","l":"Couche 7 - Application:","p":["La couche application du modèle OSI fournit essentiellement des options de mise en réseau aux programmes exécutés sur un ordinateur. Il fonctionne presque exclusivement avec les applications, leur fournissant une interface à utiliser pour transmettre des données. Lorsque les données sont transmises à la couche application, elles sont transmises à la couche présentation."]}],[{"l":"Modèle TCP-IP","p":["Le modèle TCP / IP est, à bien des égards, très similaire au modèle OSI. Il a quelques années de plus et sert de base à un réseau réel. Le modèle TCP / IP se compose de quatre couches: Application, Transport, Internet et Interface réseau. Entre eux, ceux-ci couvrent la même gamme de fonctions que les sept couches du modèle OSI.","Remarque: Certaines sources récentes divisent le modèle TCP / IP en cinq couches - divisant la couche d'interface réseau en couches de liaison de données et physiques (comme avec le modèle OSI). Ceci est accepté et bien connu; cependant, il n'est pas officiellement défini (contrairement aux quatre couches d'origine qui sont définies dans la RFC1122). C'est à vous de décider de la version que vous utilisez - les deux sont généralement considérées comme valides. Vous auriez raison de demander pourquoi nous nous préoccupons du modèle OSI s'il n'est pas réellement utilisé pour quoi que ce soit dans le monde réel. La réponse à cette question est tout simplement que le modèle OSI (du fait qu'il est moins condensé et plus rigide que le modèle TCP / IP) a tendance à être plus facile pour l'apprentissage de la théorie initiale du réseautage.","Un modèle en couches est excellent comme aide visuelle - il nous montre le processus général de la façon dont les données peuvent être encapsulées et envoyées sur un réseau, mais comment cela se produit-il réellement?","Lorsque nous parlons de TCP / IP, c'est bien beau de penser à une table avec quatre couches, mais nous parlons en fait d'une suite de protocoles - des ensembles de règles qui définissent comment une action doit être effectuée . TCP / IP tire son nom des deux plus importants d'entre eux: le protocole de contrôle de transmission (que nous avons évoqué plus tôt dans le modèle OSI) qui contrôle le flux de données entre deux points de terminaison, et le protocole Internet, qui contrôle la façon dont les paquets sont adressés. et envoyé. Il existe de nombreux autres protocoles qui composent la suite TCP / IP; nous en couvrirons certains dans des tâches ultérieures. Pour l'instant, parlons de TCP. Comme mentionné précédemment, TCP est un protocole basé sur la connexion. En d'autres termes, avant d'envoyer des données via TCP, vous devez d'abord établir une connexion stable entre les deux ordinateurs. Le processus de formation de cette connexion s'appelle la poignée de main à trois. Lorsque vous essayez d'établir une connexion, votre ordinateur envoie d'abord une demande spéciale au serveur distant indiquant qu'il souhaite initialiser une connexion. Cette demande contient quelque chose appelé un bit SYN (abréviation de synchronize), qui établit essentiellement le premier contact lors du démarrage du processus de connexion. Le serveur répondra alors par un paquet contenant le bit SYN, ainsi qu'un autre bit «acquittement», appelé ACK. Enfin, votre ordinateur enverra un paquet contenant le bit ACK à lui seul, confirmant que la connexion a été établie avec succès. Une fois la prise de contact en trois étapes effectuée avec succès, les données peuvent être transmises de manière fiable entre les deux ordinateurs. Toutes les données perdues ou corrompues lors de la transmission sont renvoyées, conduisant ainsi à une connexion qui semble être sans perte."]}],[{"l":"Réseau","p":["Liste d'outils:","Ping","Traceroute","Whois"]}],[{"l":"Ping","p":["À ce stade, j'espère que toute la théorie a du sens et que vous comprenez maintenant les modèles de base des réseaux informatiques.Nous allons examiner certains des outils de mise en réseau en ligne de commande que nous pouvons utiliser dans des applications pratiques. Beaucoup de ces outils fonctionnent sur d'autres systèmes d'exploitation, mais par souci de simplicité, je vais supposer que vous utilisez Linux. Le premier outil que nous allons examiner sera la commande ping.","La commande ping est utilisée lorsque nous voulons tester si une connexion à une ressource distante est possible. Il s'agit généralement d'un site Web sur Internet, mais il peut également s'agir d'un ordinateur de votre réseau domestique si vous souhaitez vérifier s'il est correctement configuré. Ping fonctionne en utilisant le protocole ICMP, qui est l'un des protocoles TCP / IP légèrement moins connus qui ont été mentionnés précédemment. Le protocole ICMP fonctionne sur la couche réseau du modèle OSI, et donc sur la couche Internet du modèle TCP / IP. La syntaxe de base pour ping est:","Dans cet exemple, nous utilisons le ping pour tester si une connexion réseau à Google est possible:"]}],[{"l":"Traceroute","p":["La suite logique de la commande ping est «traceroute». Traceroute peut être utilisé pour mapper le chemin emprunté par votre demande lorsqu'elle se dirige vers la machine cible. Internet est composé de très nombreux serveurs et points de terminaison différents, tous connectés les uns aux autres. Cela signifie que, pour accéder au contenu que vous voulez réellement, vous devez d'abord passer par un tas d'autres serveurs. Traceroute vous permet de voir chacune de ces connexions - il vous permet de voir chaque étape intermédiaire entre votre ordinateur et la ressource que vous avez demandée. La syntaxe de base de traceroute sous Linux est la suivante:","Exemple:"]}],[{"l":"Whois","p":["Whois est un service de recherche fourni par les registres Internet, par exemple les Registres Internet régionaux ou bien les registres de noms de domaine permettant d'obtenir des informations sur une adresse IP ou un nom de domaine. Ces informations ont des usages très variés, que ce soit la coordination entre ingénieurs réseaux pour résoudre un problème technique, ou bien la recherche du titulaire d'un nom de domaine par une société qui souhaiterait l'obtenir. Exemple avec le nom de domaine: microsoft.com"]}],[{"l":"Web","p":["Apache"]}],[{"l":"Apache 2","p":["Le projet Apache HTTP Server est un effort pour développer et maintenir un serveur HTTP open-source pour les systèmes d'exploitation modernes, y compris UNIX et Windows. Le but de ce projet est de fournir un serveur sécurisé, efficace et extensible qui fournit des services HTTP synchronisés avec les standards HTTP actuels. Open website"]},{"l":"Docs","p":["Creation de mon 1er site","Plusieurs sites sur le même serveur","Proxy","Auto SSL"]}],[{"l":"Proxy","p":["C'est juste pour rebalancer une requette sur un autre port","Installation de base:","On active les modules sur apache2","Normalement il n'y a pas d'erreur. Si c'est le cas je ne peux actuellement pas vous aider (xD) Bref c'est activé. Vous pouvez donc l'utiliser comme l'exemple qui suit"]}],[{"l":"Creation de mon 1er site","p":["Cet article est là pour vous apprendre à mettre en place votre 1er site internet à l'aide d'apache sur votre plateforme d'hébergement.","La première étape est de bien évidemment installer le package sur votre système.","Après avoir fait cette installation apache2 devrait déjà être en marche. Pour le vérifier il faut aller le vérifier lui-même en allant à l'adresse suivante:","Pour du travail en local, il est possible d'utiliser 127.0.0.1","Bref vous devriez avoir une page similaire à celle ci-dessous","Dans le cas d'un site statique, il ne vous reste plus que cette étape ! Il vous faut uploader vos fichiers de sites statiques sur votre serveur. Probablement en utilisant un logiciel FTP/SFTP comme filezilla","Vous devez uploader vos fichiers dans le répertoire par défaut, c’est-à-dire:","Notons que le dossier doit contenir un fichier index.html mis en place par défaut par Apache","Chaque dossier de votre site doit avoir un fichier nommé index.html! C'est le dossier \"page d'accueil\" du dossier","todo","Besoin de plusieurs sites ?"]}],[{"i":"création-dune-configuration-multi-sites","l":"Création d'une configuration multi sites"}],[{"l":"SSL auto signé","p":["On lance les configs, et on oublie pas de reload","On génère le certificat SSL a l'aide de openssl","openssl : c'est l'outil de ligne de commande utilisé pour la création et la gestion des certificats, clés et autres fichiers OpenSSL.","req -x509 : cela spécifie que nous voulons utiliser la gestion des demandes de signature de certificats (CSR) X.509. X.509 est une norme d'infrastructure de clé publique à laquelle SSL et TLS adhèrent pour la gestion des clés et des certificats.","-nodes : cela indique à OpenSSL de ne pas utiliser l'option de sécurisation de notre certificat par une phrase de passe. Nous avons besoin qu'Apache soit capable de lire le fichier, sans intervention de l'utilisateur, au démarrage du serveur. Une phrase de passe empêcherait que cela se produise, puisque nous devrions la saisir après chaque redémarrage.","-days 365 : cette option fixe la durée pendant laquelle le certificat sera considéré comme valide. Ici, nous l'avons fixée pour un an. De nombreux navigateurs modernes refusent les certificats dont la durée de validité dépasse un an.","-newkey rsa:2048 : cette option précise que nous voulons générer un nouveau certificat et une nouvelle clé en même temps. Nous n'avons pas créé la clé nécessaire pour signer le certificat lors d'une étape précédente, nous devons donc la créer en même temps que le certificat. La partie rsa:2048 lui demande de fabriquer une clé RSA de 2048 bits.","-keyout : cette ligne indique à OpenSSL où placer le fichier de clé privée généré que nous créons.","-out : cela indique à OpenSSL où placer le certificat que nous créons.","Puis on a des choix a faire et sa ressemble à ceci:"]},{"l":"WOW vous avez presque fini","p":["Il faut aller éditer le fichier de conf apache2 de votre site (dans le dossier /etc/apache2/sites-available)"]},{"i":"exemple","l":"Exemple:","p":["Comme sa on redirige tout sur le site https ;) En cas de petit problème avec le port 443, testez avec la commande suivante","Le certificat auto-signé n'est pas recommandé ! Je vous recommande Certbot afin d'avoir un certificat valide -"]}],[{"l":"Choose OS"}],[{"i":"configurer-un-site-tor-linux","l":"Configurer un site tor (linux)","p":["Bon je suppose que vous vous doutez qu'on doit commencer par l'installer \uD83D\uDC7E","BREF commençons. Pour cela il vous faut aller dans les fichier de confs","Toutes les configurations sont dans le fichier torrc c'est la raison pour laquelle nous allons l'éditer.","Il vous faut par la suite descendre et aller aux lignes:","C'est là que toutes les configurations de vos sites tor sont faites. Il vous suffit de créer autant de configuration que de site web tor dont vous avez besoin \uD83D\uDCC0. Après avoir supprimé les 2 lignes du site par défaut, je vous propose une configuration simple comme suit:","Maintenant que les configurations sont faites, il suffit de redémarrer le service tor.","S'il n'y a pas d'erreur c'est que vos sites web sont en ligne. Maintenant, il faut aller récupérer leur nom de domaine que Tor vous a attribué. Pour cela il faut aller nano le fichier ou cela est stocké.","Le fichier est dans: HiddenServiceDir / hostname donc dans le cas de mon site1","Il ne vous reste plus que à copier l'url et votre site est online. \uD83D\uDD2E"]}]]